--
-- PostgreSQL database dump
--

-- Dumped from database version 15.12 (Debian 15.12-1.pgdg120+1)
-- Dumped by pg_dump version 15.10 (Debian 15.10-0+deb12u1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: refresh_orders_sku_view(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.refresh_orders_sku_view() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    DECLARE
        last_refresh timestamp;
    BEGIN
        SELECT last_refresh INTO last_refresh FROM pg_stat_user_tables 
        WHERE relname = 'orders_sku_view';
        
        IF last_refresh IS NULL OR 
           (CURRENT_TIMESTAMP - last_refresh) > interval '5 minutes' THEN
            RAISE NOTICE 'Refreshing orders_sku_view materialized view';
            REFRESH MATERIALIZED VIEW CONCURRENTLY orders_sku_view;
        END IF;
        
        RETURN NULL;
    END;
    $$;


ALTER FUNCTION public.refresh_orders_sku_view() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: billing_billingreport; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.billing_billingreport (
    id bigint NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    generated_at timestamp with time zone NOT NULL,
    total_amount numeric(10,2) NOT NULL,
    report_data jsonb NOT NULL,
    customer_id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    created_by_id integer,
    updated_at timestamp with time zone NOT NULL,
    updated_by_id integer
);


ALTER TABLE public.billing_billingreport OWNER TO postgres;

--
-- Name: billing_billingreport_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.billing_billingreport ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.billing_billingreport_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: billing_billingreportdetail; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.billing_billingreportdetail (
    id bigint NOT NULL,
    service_breakdown jsonb NOT NULL,
    total_amount numeric(10,2) NOT NULL,
    order_id integer NOT NULL,
    report_id bigint NOT NULL
);


ALTER TABLE public.billing_billingreportdetail OWNER TO postgres;

--
-- Name: billing_billingreportdetail_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.billing_billingreportdetail ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.billing_billingreportdetail_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: customer_services_customerservice; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customer_services_customerservice (
    id bigint NOT NULL,
    unit_price numeric(10,2) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    customer_id integer NOT NULL,
    service_id bigint NOT NULL
);


ALTER TABLE public.customer_services_customerservice OWNER TO postgres;

--
-- Name: customers_customer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customers_customer (
    id integer NOT NULL,
    company_name character varying(100) NOT NULL,
    legal_business_name character varying(100) NOT NULL,
    email character varying(254) NOT NULL,
    phone character varying(20),
    address character varying(200),
    city character varying(50),
    state character varying(50),
    zip character varying(20),
    country character varying(50),
    business_type character varying(50),
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    is_active boolean NOT NULL
);


ALTER TABLE public.customers_customer OWNER TO postgres;

--
-- Name: services_service; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.services_service (
    id bigint NOT NULL,
    service_name character varying(100) NOT NULL,
    description text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    charge_type character varying(10) NOT NULL
);


ALTER TABLE public.services_service OWNER TO postgres;

--
-- Name: customer_service_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.customer_service_view AS
 SELECT cs.id,
    concat(c.company_name, ' - ', s.service_name) AS customer_service
   FROM ((public.customer_services_customerservice cs
     JOIN public.services_service s ON ((cs.service_id = s.id)))
     JOIN public.customers_customer c ON ((cs.customer_id = c.id)));


ALTER TABLE public.customer_service_view OWNER TO postgres;

--
-- Name: customer_services_customerservice_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.customer_services_customerservice ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.customer_services_customerservice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: customer_services_customerservice_skus; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customer_services_customerservice_skus (
    id bigint NOT NULL,
    customerservice_id bigint NOT NULL,
    product_id bigint NOT NULL
);


ALTER TABLE public.customer_services_customerservice_skus OWNER TO postgres;

--
-- Name: customer_services_customerservice_skus_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.customer_services_customerservice_skus ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.customer_services_customerservice_skus_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: customer_services_customerserviceview; Type: MATERIALIZED VIEW; Schema: public; Owner: postgres
--

CREATE MATERIALIZED VIEW public.customer_services_customerserviceview AS
 SELECT cs.id,
    cs.customer_id,
    cs.service_id,
    cs.created_at,
    cs.updated_at,
    s.service_name,
    s.description AS service_description,
    s.charge_type,
    c.company_name,
    c.legal_business_name,
    c.email,
    c.phone,
    c.address,
    c.city,
    c.state,
    c.zip,
    c.country,
    c.business_type,
    c.is_active AS customer_is_active
   FROM ((public.customer_services_customerservice cs
     JOIN public.services_service s ON ((cs.service_id = s.id)))
     JOIN public.customers_customer c ON ((cs.customer_id = c.id)))
  WITH NO DATA;


ALTER TABLE public.customer_services_customerserviceview OWNER TO postgres;

--
-- Name: customers_customers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.customers_customer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.customers_customers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: inserts_insert; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inserts_insert (
    id bigint NOT NULL,
    sku character varying(100) NOT NULL,
    insert_name character varying(100) NOT NULL,
    insert_quantity integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    customer_id integer NOT NULL,
    CONSTRAINT inserts_insert_insert_quantity_check CHECK ((insert_quantity >= 0))
);


ALTER TABLE public.inserts_insert OWNER TO postgres;

--
-- Name: inserts_insert_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.inserts_insert ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.inserts_insert_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: materials_boxprice; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.materials_boxprice (
    id bigint NOT NULL,
    box_type character varying(50) NOT NULL,
    price numeric(10,2) NOT NULL,
    length numeric(5,2) NOT NULL,
    width numeric(5,2) NOT NULL,
    height numeric(5,2) NOT NULL
);


ALTER TABLE public.materials_boxprice OWNER TO postgres;

--
-- Name: materials_boxprice_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.materials_boxprice ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.materials_boxprice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: materials_material; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.materials_material (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    description text,
    unit_price numeric(10,2) NOT NULL
);


ALTER TABLE public.materials_material OWNER TO postgres;

--
-- Name: materials_material_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.materials_material ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.materials_material_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: orders_order; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.orders_order (
    transaction_id integer NOT NULL,
    close_date timestamp with time zone,
    reference_number character varying(100) NOT NULL,
    ship_to_name character varying(100),
    ship_to_company character varying(100),
    ship_to_address character varying(200),
    ship_to_address2 character varying(200),
    ship_to_city character varying(100),
    ship_to_state character varying(50),
    ship_to_zip character varying(20),
    ship_to_country character varying(50),
    weight_lb numeric(10,2),
    line_items integer,
    sku_quantity jsonb,
    total_item_qty integer,
    volume_cuft numeric(10,2),
    packages integer,
    notes text,
    carrier character varying(50),
    customer_id integer NOT NULL,
    priority character varying(20) NOT NULL,
    status character varying(20) NOT NULL
);


ALTER TABLE public.orders_order OWNER TO postgres;

--
-- Name: products_product; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.products_product (
    id bigint NOT NULL,
    sku character varying(100) NOT NULL,
    labeling_unit_1 character varying(50),
    labeling_quantity_1 integer,
    labeling_unit_2 character varying(50),
    labeling_quantity_2 integer,
    labeling_unit_3 character varying(50),
    labeling_quantity_3 integer,
    labeling_unit_4 character varying(50),
    labeling_quantity_4 integer,
    labeling_unit_5 character varying(50),
    labeling_quantity_5 integer,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    customer_id integer NOT NULL,
    CONSTRAINT billing_product_labeling_quantity_1_check CHECK ((labeling_quantity_1 >= 0)),
    CONSTRAINT billing_product_labeling_quantity_2_check CHECK ((labeling_quantity_2 >= 0)),
    CONSTRAINT billing_product_labeling_quantity_3_check CHECK ((labeling_quantity_3 >= 0)),
    CONSTRAINT billing_product_labeling_quantity_4_check CHECK ((labeling_quantity_4 >= 0)),
    CONSTRAINT billing_product_labeling_quantity_5_check CHECK ((labeling_quantity_5 >= 0)),
    CONSTRAINT products_product_labeling_quantity_1_check CHECK ((labeling_quantity_1 >= 0)),
    CONSTRAINT products_product_labeling_quantity_2_check CHECK ((labeling_quantity_2 >= 0)),
    CONSTRAINT products_product_labeling_quantity_3_check CHECK ((labeling_quantity_3 >= 0)),
    CONSTRAINT products_product_labeling_quantity_4_check CHECK ((labeling_quantity_4 >= 0)),
    CONSTRAINT products_product_labeling_quantity_5_check CHECK ((labeling_quantity_5 >= 0))
);


ALTER TABLE public.products_product OWNER TO postgres;

--
-- Name: orders_sku_view; Type: MATERIALIZED VIEW; Schema: public; Owner: postgres
--

CREATE MATERIALIZED VIEW public.orders_sku_view AS
 WITH flattened_skus AS (
         SELECT o_1.transaction_id,
            o_1.customer_id,
            sku.key AS sku_name,
            (sku.value)::integer AS sku_count
           FROM public.orders_order o_1,
            LATERAL jsonb_each_text(o_1.sku_quantity) sku(key, value)
        )
 SELECT f.transaction_id,
    f.customer_id,
    f.sku_name,
    f.sku_count,
    o.close_date,
    o.reference_number,
    o.ship_to_name,
    o.ship_to_company,
    o.ship_to_address,
    o.ship_to_address2,
    o.ship_to_city,
    o.ship_to_state,
    o.ship_to_zip,
    o.ship_to_country,
    o.weight_lb,
    o.line_items,
    o.total_item_qty,
    o.volume_cuft,
    o.packages,
    o.notes,
    o.carrier,
    o.status,
    o.priority,
        CASE
            WHEN (p.labeling_quantity_1 IS NOT NULL) THEN floor(((f.sku_count / NULLIF(p.labeling_quantity_1, 0)))::double precision)
            ELSE (0)::double precision
        END AS cases,
        CASE
            WHEN (p.labeling_quantity_1 IS NOT NULL) THEN (f.sku_count % NULLIF(p.labeling_quantity_1, 0))
            ELSE f.sku_count
        END AS picks,
    p.labeling_quantity_1 AS case_size,
    p.labeling_unit_1 AS case_unit
   FROM ((flattened_skus f
     JOIN public.orders_order o ON ((f.transaction_id = o.transaction_id)))
     LEFT JOIN public.products_product p ON ((((p.sku)::text = f.sku_name) AND (p.customer_id = f.customer_id))))
  WITH NO DATA;


ALTER TABLE public.orders_sku_view OWNER TO postgres;

--
-- Name: products_product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.products_product ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.products_product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: rules_advancedrule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rules_advancedrule (
    rule_ptr_id bigint NOT NULL,
    conditions jsonb NOT NULL,
    calculations jsonb NOT NULL,
    tier_config jsonb NOT NULL
);


ALTER TABLE public.rules_advancedrule OWNER TO postgres;

--
-- Name: rules_rule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rules_rule (
    id bigint NOT NULL,
    field character varying(50) NOT NULL,
    operator character varying(15) NOT NULL,
    value character varying(255) NOT NULL,
    adjustment_amount numeric(10,2),
    rule_group_id bigint NOT NULL
);


ALTER TABLE public.rules_rule OWNER TO postgres;

--
-- Name: rules_rule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.rules_rule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.rules_rule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: rules_rulegroup; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rules_rulegroup (
    id bigint NOT NULL,
    logic_operator character varying(5) NOT NULL,
    customer_service_id bigint NOT NULL
);


ALTER TABLE public.rules_rulegroup OWNER TO postgres;

--
-- Name: rules_rulegroup_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.rules_rulegroup ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.rules_rulegroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: services_service_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.services_service ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.services_service_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shipping_cadshipping; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shipping_cadshipping (
    transaction_id integer NOT NULL,
    service_code_description character varying(255),
    ship_to_name character varying(255),
    ship_to_address_1 character varying(255),
    ship_to_address_2 character varying(255),
    shiptoaddress3 character varying(255),
    ship_to_city character varying(255),
    ship_to_state character varying(255),
    ship_to_country character varying(255),
    ship_to_postal_code character varying(20),
    tracking_number character varying(50),
    pre_tax_shipping_charge numeric(10,2),
    tax1type character varying(50),
    tax1amount numeric(10,2),
    tax2type character varying(50),
    tax2amount numeric(10,2),
    tax3type character varying(50),
    tax3amount numeric(10,2),
    fuel_surcharge numeric(10,2),
    reference character varying(255),
    weight numeric(10,2),
    gross_weight numeric(10,2),
    box_length numeric(10,2),
    box_width numeric(10,2),
    box_height numeric(10,2),
    box_name character varying(255),
    ship_date timestamp with time zone,
    carrier character varying(50),
    raw_ship_date text,
    customer_id integer NOT NULL
);


ALTER TABLE public.shipping_cadshipping OWNER TO postgres;

--
-- Name: shipping_usshipping; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shipping_usshipping (
    transaction_id integer NOT NULL,
    ship_date date,
    ship_to_name character varying(255),
    ship_to_address_1 character varying(255),
    ship_to_address_2 character varying(255),
    ship_to_city character varying(255),
    ship_to_state character varying(255),
    ship_to_zip character varying(20),
    ship_to_country_code character varying(10),
    tracking_number character varying(50),
    service_name character varying(255),
    weight_lbs numeric(10,2),
    length_in numeric(10,2),
    width_in numeric(10,2),
    height_in numeric(10,2),
    base_chg numeric(10,2),
    carrier_peak_charge numeric(10,2),
    wizmo_peak_charge numeric(10,2),
    accessorial_charges numeric(10,2),
    rate numeric(10,2),
    hst numeric(10,2),
    gst numeric(10,2),
    current_status character varying(255),
    delivery_status character varying(255),
    first_attempt_date date,
    delivery_date date,
    days_to_first_deliver integer,
    customer_id integer NOT NULL
);


ALTER TABLE public.shipping_usshipping OWNER TO postgres;

--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: billing_billingreport billing_billingreport_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_billingreport
    ADD CONSTRAINT billing_billingreport_pkey PRIMARY KEY (id);


--
-- Name: billing_billingreportdetail billing_billingreportdetail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_billingreportdetail
    ADD CONSTRAINT billing_billingreportdetail_pkey PRIMARY KEY (id);


--
-- Name: products_product billing_product_sku_customer_id_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products_product
    ADD CONSTRAINT billing_product_sku_customer_id_uniq UNIQUE (sku, customer_id);


--
-- Name: customer_services_customerservice customer_services_custom_customer_id_service_id_d302d9be_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_services_customerservice
    ADD CONSTRAINT customer_services_custom_customer_id_service_id_d302d9be_uniq UNIQUE (customer_id, service_id);


--
-- Name: customer_services_customerservice_skus customer_services_custom_customerservice_id_produ_ec57f638_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_services_customerservice_skus
    ADD CONSTRAINT customer_services_custom_customerservice_id_produ_ec57f638_uniq UNIQUE (customerservice_id, product_id);


--
-- Name: customer_services_customerservice customer_services_customerservice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_services_customerservice
    ADD CONSTRAINT customer_services_customerservice_pkey PRIMARY KEY (id);


--
-- Name: customer_services_customerservice_skus customer_services_customerservice_skus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_services_customerservice_skus
    ADD CONSTRAINT customer_services_customerservice_skus_pkey PRIMARY KEY (id);


--
-- Name: customers_customer customers_customers_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers_customer
    ADD CONSTRAINT customers_customers_email_key UNIQUE (email);


--
-- Name: customers_customer customers_customers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers_customer
    ADD CONSTRAINT customers_customers_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: inserts_insert inserts_insert_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inserts_insert
    ADD CONSTRAINT inserts_insert_pkey PRIMARY KEY (id);


--
-- Name: materials_boxprice materials_boxprice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.materials_boxprice
    ADD CONSTRAINT materials_boxprice_pkey PRIMARY KEY (id);


--
-- Name: materials_material materials_material_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.materials_material
    ADD CONSTRAINT materials_material_name_key UNIQUE (name);


--
-- Name: materials_material materials_material_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.materials_material
    ADD CONSTRAINT materials_material_pkey PRIMARY KEY (id);


--
-- Name: orders_order orders_order_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders_order
    ADD CONSTRAINT orders_order_pkey PRIMARY KEY (transaction_id);


--
-- Name: products_product products_product_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products_product
    ADD CONSTRAINT products_product_pkey PRIMARY KEY (id);


--
-- Name: rules_advancedrule rules_advancedrule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rules_advancedrule
    ADD CONSTRAINT rules_advancedrule_pkey PRIMARY KEY (rule_ptr_id);


--
-- Name: rules_rule rules_rule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rules_rule
    ADD CONSTRAINT rules_rule_pkey PRIMARY KEY (id);


--
-- Name: rules_rulegroup rules_rulegroup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rules_rulegroup
    ADD CONSTRAINT rules_rulegroup_pkey PRIMARY KEY (id);


--
-- Name: services_service services_service_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.services_service
    ADD CONSTRAINT services_service_pkey PRIMARY KEY (id);


--
-- Name: services_service services_service_service_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.services_service
    ADD CONSTRAINT services_service_service_name_key UNIQUE (service_name);


--
-- Name: shipping_cadshipping shipping_cadshipping_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shipping_cadshipping
    ADD CONSTRAINT shipping_cadshipping_pkey PRIMARY KEY (transaction_id);


--
-- Name: shipping_usshipping shipping_usshipping_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shipping_usshipping
    ADD CONSTRAINT shipping_usshipping_pkey PRIMARY KEY (transaction_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: billing_bil_created_cc710c_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_bil_created_cc710c_idx ON public.billing_billingreport USING btree (created_at);


--
-- Name: billing_bil_custome_a865ff_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_bil_custome_a865ff_idx ON public.billing_billingreport USING btree (customer_id, start_date, end_date);


--
-- Name: billing_bil_generat_93d22c_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_bil_generat_93d22c_idx ON public.billing_billingreport USING btree (generated_at);


--
-- Name: billing_bil_report__69e5c8_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_bil_report__69e5c8_idx ON public.billing_billingreportdetail USING btree (report_id, order_id);


--
-- Name: billing_bil_total_a_eb75da_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_bil_total_a_eb75da_idx ON public.billing_billingreportdetail USING btree (total_amount);


--
-- Name: billing_billingreport_created_by_id_da7dc087; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_billingreport_created_by_id_da7dc087 ON public.billing_billingreport USING btree (created_by_id);


--
-- Name: billing_billingreport_customer_id_e0c5894d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_billingreport_customer_id_e0c5894d ON public.billing_billingreport USING btree (customer_id);


--
-- Name: billing_billingreport_updated_by_id_074d58f0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_billingreport_updated_by_id_074d58f0 ON public.billing_billingreport USING btree (updated_by_id);


--
-- Name: billing_billingreportdetail_order_id_895da2c4; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_billingreportdetail_order_id_895da2c4 ON public.billing_billingreportdetail USING btree (order_id);


--
-- Name: billing_billingreportdetail_report_id_eea29e7f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX billing_billingreportdetail_report_id_eea29e7f ON public.billing_billingreportdetail USING btree (report_id);


--
-- Name: company_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX company_name_idx ON public.customers_customer USING btree (company_name);


--
-- Name: customer_services_customer_customerservice_id_e28d06f7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX customer_services_customer_customerservice_id_e28d06f7 ON public.customer_services_customerservice_skus USING btree (customerservice_id);


--
-- Name: customer_services_customerservice_customer_id_4bd36f95; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX customer_services_customerservice_customer_id_4bd36f95 ON public.customer_services_customerservice USING btree (customer_id);


--
-- Name: customer_services_customerservice_service_id_9092bc9d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX customer_services_customerservice_service_id_9092bc9d ON public.customer_services_customerservice USING btree (service_id);


--
-- Name: customer_services_customerservice_skus_customerservice_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX customer_services_customerservice_skus_customerservice_id_idx ON public.customer_services_customerservice_skus USING btree (customerservice_id);


--
-- Name: customer_services_customerservice_skus_product_id_99f6aba0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX customer_services_customerservice_skus_product_id_99f6aba0 ON public.customer_services_customerservice_skus USING btree (product_id);


--
-- Name: customer_services_customerservice_skus_product_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX customer_services_customerservice_skus_product_id_idx ON public.customer_services_customerservice_skus USING btree (product_id);


--
-- Name: customer_services_customerserviceview_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX customer_services_customerserviceview_id_idx ON public.customer_services_customerserviceview USING btree (id);


--
-- Name: customers_customers_email_79d0357d_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX customers_customers_email_79d0357d_like ON public.customers_customer USING btree (email varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: email_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX email_idx ON public.customers_customer USING btree (email);


--
-- Name: idx_order_customer_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_order_customer_id ON public.orders_order USING btree (customer_id);


--
-- Name: idx_order_reference_number; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_order_reference_number ON public.orders_order USING btree (reference_number);


--
-- Name: idx_order_ship_to_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_order_ship_to_name ON public.orders_order USING btree (ship_to_name);


--
-- Name: idx_order_transaction_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_order_transaction_id ON public.orders_order USING btree (transaction_id);


--
-- Name: idx_orders_sku_quantity; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_orders_sku_quantity ON public.orders_order USING gin (sku_quantity);


--
-- Name: idx_products_sku_customer; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_products_sku_customer ON public.products_product USING btree (sku, customer_id);


--
-- Name: inserts_insert_customer_id_04e319d0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inserts_insert_customer_id_04e319d0 ON public.inserts_insert USING btree (customer_id);


--
-- Name: materials_material_name_9a3b4f43_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX materials_material_name_9a3b4f43_like ON public.materials_material USING btree (name varchar_pattern_ops);


--
-- Name: orders_order_customer_id_0b76f6a4; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX orders_order_customer_id_0b76f6a4 ON public.orders_order USING btree (customer_id);


--
-- Name: orders_sku_view_transaction_id_sku_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX orders_sku_view_transaction_id_sku_name_idx ON public.orders_sku_view USING btree (transaction_id, sku_name);


--
-- Name: products_product_customer_id_c69c604c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX products_product_customer_id_c69c604c ON public.products_product USING btree (customer_id);


--
-- Name: rules_rule_field_f2624dc1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rules_rule_field_f2624dc1 ON public.rules_rule USING btree (field);


--
-- Name: rules_rule_field_f2624dc1_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rules_rule_field_f2624dc1_like ON public.rules_rule USING btree (field varchar_pattern_ops);


--
-- Name: rules_rule_rule_group_id_7b473e52; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rules_rule_rule_group_id_7b473e52 ON public.rules_rule USING btree (rule_group_id);


--
-- Name: rules_rulegroup_customer_service_id_c46adf52; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX rules_rulegroup_customer_service_id_c46adf52 ON public.rules_rulegroup USING btree (customer_service_id);


--
-- Name: services_service_service_name_dc695eab_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX services_service_service_name_dc695eab_like ON public.services_service USING btree (service_name varchar_pattern_ops);


--
-- Name: shipping_cadshipping_customer_id_c3a34313; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shipping_cadshipping_customer_id_c3a34313 ON public.shipping_cadshipping USING btree (customer_id);


--
-- Name: shipping_usshipping_customer_id_c7552fe9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shipping_usshipping_customer_id_c7552fe9 ON public.shipping_usshipping USING btree (customer_id);


--
-- Name: orders_order refresh_orders_sku_view_on_order; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER refresh_orders_sku_view_on_order AFTER INSERT OR DELETE OR UPDATE ON public.orders_order FOR EACH STATEMENT EXECUTE FUNCTION public.refresh_orders_sku_view();


--
-- Name: products_product refresh_orders_sku_view_on_product; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER refresh_orders_sku_view_on_product AFTER INSERT OR DELETE OR UPDATE ON public.products_product FOR EACH STATEMENT EXECUTE FUNCTION public.refresh_orders_sku_view();


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: billing_billingreport billing_billingrepor_customer_id_e0c5894d_fk_customers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_billingreport
    ADD CONSTRAINT billing_billingrepor_customer_id_e0c5894d_fk_customers FOREIGN KEY (customer_id) REFERENCES public.customers_customer(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: billing_billingreportdetail billing_billingrepor_order_id_895da2c4_fk_orders_or; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_billingreportdetail
    ADD CONSTRAINT billing_billingrepor_order_id_895da2c4_fk_orders_or FOREIGN KEY (order_id) REFERENCES public.orders_order(transaction_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: billing_billingreportdetail billing_billingrepor_report_id_eea29e7f_fk_billing_b; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_billingreportdetail
    ADD CONSTRAINT billing_billingrepor_report_id_eea29e7f_fk_billing_b FOREIGN KEY (report_id) REFERENCES public.billing_billingreport(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: billing_billingreport billing_billingreport_created_by_id_da7dc087_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_billingreport
    ADD CONSTRAINT billing_billingreport_created_by_id_da7dc087_fk_auth_user_id FOREIGN KEY (created_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: billing_billingreport billing_billingreport_updated_by_id_074d58f0_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_billingreport
    ADD CONSTRAINT billing_billingreport_updated_by_id_074d58f0_fk_auth_user_id FOREIGN KEY (updated_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: customer_services_customerservice customer_services_cu_customer_id_4bd36f95_fk_customers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_services_customerservice
    ADD CONSTRAINT customer_services_cu_customer_id_4bd36f95_fk_customers FOREIGN KEY (customer_id) REFERENCES public.customers_customer(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: customer_services_customerservice_skus customer_services_cu_customerservice_id_e28d06f7_fk_customer_; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_services_customerservice_skus
    ADD CONSTRAINT customer_services_cu_customerservice_id_e28d06f7_fk_customer_ FOREIGN KEY (customerservice_id) REFERENCES public.customer_services_customerservice(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: customer_services_customerservice_skus customer_services_cu_product_id_99f6aba0_fk_products_; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_services_customerservice_skus
    ADD CONSTRAINT customer_services_cu_product_id_99f6aba0_fk_products_ FOREIGN KEY (product_id) REFERENCES public.products_product(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: customer_services_customerservice customer_services_cu_service_id_9092bc9d_fk_services_; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_services_customerservice
    ADD CONSTRAINT customer_services_cu_service_id_9092bc9d_fk_services_ FOREIGN KEY (service_id) REFERENCES public.services_service(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: inserts_insert inserts_insert_customer_id_04e319d0_fk_customers_customer_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inserts_insert
    ADD CONSTRAINT inserts_insert_customer_id_04e319d0_fk_customers_customer_id FOREIGN KEY (customer_id) REFERENCES public.customers_customer(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: orders_order orders_order_customer_id_0b76f6a4_fk_customers_customer_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders_order
    ADD CONSTRAINT orders_order_customer_id_0b76f6a4_fk_customers_customer_id FOREIGN KEY (customer_id) REFERENCES public.customers_customer(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: products_product products_product_customer_id_c69c604c_fk_customers_customer_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products_product
    ADD CONSTRAINT products_product_customer_id_c69c604c_fk_customers_customer_id FOREIGN KEY (customer_id) REFERENCES public.customers_customer(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rules_advancedrule rules_advancedrule_rule_ptr_id_969fa92f_fk_rules_rule_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rules_advancedrule
    ADD CONSTRAINT rules_advancedrule_rule_ptr_id_969fa92f_fk_rules_rule_id FOREIGN KEY (rule_ptr_id) REFERENCES public.rules_rule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rules_rule rules_rule_rule_group_id_7b473e52_fk_rules_rulegroup_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rules_rule
    ADD CONSTRAINT rules_rule_rule_group_id_7b473e52_fk_rules_rulegroup_id FOREIGN KEY (rule_group_id) REFERENCES public.rules_rulegroup(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rules_rulegroup rules_rulegroup_customer_service_id_c46adf52_fk_customer_; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rules_rulegroup
    ADD CONSTRAINT rules_rulegroup_customer_service_id_c46adf52_fk_customer_ FOREIGN KEY (customer_service_id) REFERENCES public.customer_services_customerservice(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shipping_cadshipping shipping_cadshipping_customer_id_c3a34313_fk_customers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shipping_cadshipping
    ADD CONSTRAINT shipping_cadshipping_customer_id_c3a34313_fk_customers FOREIGN KEY (customer_id) REFERENCES public.customers_customer(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shipping_cadshipping shipping_cadshipping_transaction_id_28a7e7f1_fk_orders_or; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shipping_cadshipping
    ADD CONSTRAINT shipping_cadshipping_transaction_id_28a7e7f1_fk_orders_or FOREIGN KEY (transaction_id) REFERENCES public.orders_order(transaction_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shipping_usshipping shipping_usshipping_customer_id_c7552fe9_fk_customers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shipping_usshipping
    ADD CONSTRAINT shipping_usshipping_customer_id_c7552fe9_fk_customers FOREIGN KEY (customer_id) REFERENCES public.customers_customer(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shipping_usshipping shipping_usshipping_transaction_id_2e64ecb2_fk_orders_or; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shipping_usshipping
    ADD CONSTRAINT shipping_usshipping_transaction_id_2e64ecb2_fk_orders_or FOREIGN KEY (transaction_id) REFERENCES public.orders_order(transaction_id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

