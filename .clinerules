# Project Development Guidelines

## Backend Development Constraints

1. Django Settings Management
   - Do not modify the existing Django settings.py file
   - Additional settings must be added to the settings.py file
   - Document any new settings with clear comments

2. Model Constraints
   - Do not modify any Django models (no adding/removing fields)
   - Do not alter existing model relationships
   - Virtual tables can be added as needed
   - For model change requests:
     - Respond with: "Should we make an exception to the constraints in this case, or would you prefer an alternative approach?"
     - Follow user instructions after their response
   - This process must be repeated for every model change request

3. Backend Security
   - Do not implement security features during development
   - Do not implement authentication during development
   - Do not alter existing backend logic

## Frontend Development Guidelines

1. Component Organization
   - All frontend components must be placed in the frontend folder
   - Follow a consistent component structure:
     - One component per file
     - Use meaningful component names
     - Group related components in subdirectories

2. UI Framework Requirements
   - Use Material UI as the primary component library
   - Material React Table must be used for all list views
   - Exception: Rules app may use alternative Material UI components or other design libraries

3. Component Implementation
   - List views must display all model fields in table format
   - Implement responsive design for all screen sizes
   - Ensure consistent styling across components
   - Handle loading, error, and empty states appropriately

4. Development Process
   - Analyze model relationships thoroughly before creating components
   - Test components in development server environment
   - Verify component behavior across different screen sizes
   - Implement proper error handling and loading states

## Testing Requirements

1. Component Testing
   - Test all components thoroughly in development server
   - Verify responsive behavior across different devices
   - Test all interactive features and data display
   - Validate error handling and edge cases

2. Visual Testing
   - Ensure consistent appearance across browsers
   - Verify component alignment and spacing
   - Test responsive breakpoints
   - Validate accessibility features
